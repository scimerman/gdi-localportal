networks:
  private-net:
services:
  postgres:
    image: postgres:14-alpine
    hostname: postgres
#    ports:
#      - 5432:5432
    networks:
      - private-net
    environment:
    - POSTGRES_USER=pguser
    - POSTGRES_PASSWORD=pgpass
    - POSTGRES_DB=postgresdb
    volumes:
    - ./postgres/psql_data:/var/lib/postgresql/data
    - ./postgres/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    command: -c 'shared_buffers=256MB' -c 'max_locks_per_transaction=1024'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "molgenisdb", "&&",  "pg_isready", "-d", "remsdb", "&&",  "pg_isready", "-d", "keycloakdb"]
      interval: 5s
      timeout: 60s
      retries: 20
    restart: on-failure
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    hostname: keycloak
#    ports:
#      - 9000
    networks:
      - private-net
    entrypoint: /bin/bash -c "/opt/keycloak/bin/kc.sh import --optimized --dir /opt/keycloak/import && /opt/keycloak/bin/kc.sh start --proxy-headers=forwarded --http-port=9000 --hostname-url=http://localhost:9000 --hostname-admin-url=http://localhost:9000"
    # entrypoint: /bin/bash -c "/opt/keycloak/bin/kc.sh import --optimized --dir /opt/keycloak/import && /opt/keycloak/bin/kc.sh start-dev --proxy=edge --hostname-strict=false --hostname-strict-https=false --http-port 9000"
    # entrypoint: /bin/bash -c "sleep 100000"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      # KEYCLOAK
      # behind reverse proxy, see https://www.keycloak.org/server/reverseproxy
      # Old format
      - KC_PROXY=edge
      # New format
      - KC_PROXY_HEADERS=forwarded
      ## hostname
      #- KC_HOSTNAME_URL=proxy
    volumes:
    - ./keycloak/import:/opt/keycloak/import
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: /bin/bash -c "{ echo -e 'GET /realms/lportal/.well-known/openid-configuration HTTP/1.0\r\n\r\n\r\n' >&3; cat <&3 ; } 3<> /dev/tcp/localhost/9000" || exit 1
      interval: 5s
      timeout: 5s
      retries: 30
    restart: on-failure
  rems:
    image: umcg/rems
    env_file: ./.env
    build:
      context: ./rems/
      args:
        REMS_VERSION:
        REMS_PORTALBOT_KEY:
        PORTAL_DATABASE:
    hostname: rems
#    ports:
#      - 3000
    networks:
      - private-net
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      molgenis:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: curl 127.0.0.1:3000
      interval: 15s
      retries: 40
      timeout: 5s
      #start_period: 2m
  molgenis:
    image: umcg/molgenis
    env_file: ./.env
    build:
      context: ./molgenis/
      args:
        # All values are set in .env, list here are the ones that are actually mapped to docker
        GDI_PORTAL_NAME:
        REMS_OWNER_EMAIL:
        REMS_PORTALBOT_KEY:
        REMS_PUBLIC_URL:
        MOLGENIS_HTTP_PORT:
        MOLGENIS_POSTGRES_URI:
        MOLGENIS_POSTGRES_USER:
        MOLGENIS_POSTGRES_PASS:
        MOLGENIS_OIDC_CLIENT_ID:
        MOLGENIS_OIDC_CLIENT_SECRET:
        MOLGENIS_OIDC_DISCOVERY_URI:
        MOLGENIS_OIDC_CALLBACK_URL:
        MOLGENIS_EXCLUDE_PETSTORE_DEMO:
        GDI_PORTAL_INTERNAL_URL:
        GDI_PORTAL_PUBLIC_URL:
    hostname: molgenis
#    ports:
#      - 8080
    networks:
      - private-net
    environment:
      # see also https://molgenis.github.io/molgenis-emx2/#/molgenis/use_permissions?id=to-enable-oidc-the-following-environment-variables-need-to-be-set
      - MOLGENIS_POSTGRES_URI=jdbc:postgresql://postgres/molgenisdb
      - MOLGENIS_POSTGRES_USER=molgenis
      - MOLGENIS_POSTGRES_PASS=molgenis
      - MOLGENIS_OIDC_CLIENT_ID=lportalclient
      - MOLGENIS_OIDC_CLIENT_SECRET=kYBU698XaEyTqPQAtKeiQoN5KXLgrxF8
      - MOLGENIS_OIDC_DISCOVERY_URI=http://keycloak:9000/realms/lportal/.well-known/openid-configuration
      - MOLGENIS_OIDC_CALLBACK_URL=http://localhost:8080
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "/bin/bash", " -c \"{ echo -e 'get / http/1.0\r\n\r\n\r\n' >&3; cat <&3 ; } 3<> /dev/tcp/127.0.0.1/80\"" ]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: on-failure
  proxy:
    image: nginx:1.25.4-alpine-slim
    ports:
#      - "80:80"
#      - "443:443"
      - "0.0.0.0:3000:3000"
#      - "0.0.0.0:5432:5432"
      - "0.0.0.0:8080:8080"
      - "0.0.0.0:8443:8443"
      - "0.0.0.0:9000:9000"
    networks:
      - private-net
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      molgenis:
        condition: service_healthy
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/my.crt:/etc/ssl/certs/my.crt:ro
      - ./proxy/my.key:/etc/ssl/private/my.key:ro
    healthcheck:
      test: [ "CMD-SHELL", "/bin/ash", " -c \"{ echo -e 'get / http/1.0\r\n\r\n\r\n' >&3; cat <&3 ; } 3<> /dev/tcp/127.0.0.1/8080\"" ]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: on-failure
